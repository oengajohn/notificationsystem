version: "3.8"
services:
  zookeeper-1:
    container_name: zookeeper-1
    image: systech/zookeeper:3.2.0
    build:
      context: ./kafka/zookeeper
    volumes:
    - ./kafka/config/zookeeper-1/zookeeper.properties:/kafka/config/zookeeper.properties
    - ./kafka/data/zookeeper-1/:/tmp/zookeeper/
    expose:
      - '2181'
    networks:
      - backend
      - frontend
  kafka-1:
    container_name: kafka-1
    image: systech/kafka:3.2.0
    build: 
      context: ./kafka/
    depends_on:
      zookeeper-1:
        condition: service_started
    volumes:
    - ./kafka/config/kafka-1/server.properties:/kafka/config/server.properties
    - ./kafka/data/kafka-1/:/tmp/kafka-logs/
    ports:
      - '9092:9092'

    expose:
      - '9092'
    networks:
      - backend
      - frontend
  
  kafka-2:
    container_name: kafka-2
    image: systech/kafka:3.2.0
    build: 
      context: ./kafka/
    volumes:
    - ./kafka/config/kafka-2/server.properties:/kafka/config/server.properties
    - ./kafka/data/kafka-2/:/tmp/kafka-logs/
    depends_on:
      zookeeper-1:
        condition: service_started
    expose:
      - '9092'
    networks:
      - backend
      - frontend

  kafka-3:
    container_name: kafka-3
    image: systech/kafka:3.2.0
    build: 
      context: ./kafka/
    depends_on:
      zookeeper-1:
        condition: service_started
    volumes:
    - ./kafka/config/kafka-3/server.properties:/kafka/config/server.properties
    - ./kafka/data/kafka-3/:/tmp/kafka-logs/
    expose:
      - '9092'

    networks:
      - backend
      - frontend

  notifiactionsystem:
    image: systech/notifiactionsystem
    build:
      context: .
    restart: always
    depends_on:
      zookeeper-1:
        condition: service_started

    environment:
      - KAFKA_SERVICE_HOST=kafka-1
      - KAFKA_SERVICE_PORT=9092
    networks:
      - backend
      - frontend
    ports:
      - "8081:8080"
      - "9991:9990"

    expose:
      # Opens port 8080,9990 on the container
      - '8081'
      - '9991'
#    deploy:
#      mode: replicated
#      replicas: 3
  notifiactionsystem2:
    image: systech/notifiactionsystem
    build:
      context: .
    restart: always
    depends_on:
      zookeeper-1:
        condition: service_started

    environment:
      - KAFKA_SERVICE_HOST=kafka-1
      - KAFKA_SERVICE_PORT=9092
    networks:
      - backend
      - frontend
    ports:
      - "8082:8080"
      - "9992:9990"

    expose:
      # Opens port 8080,9990 on the container
      - '8082'
      - '9992'
  notifiactionsystem3:
    image: systech/notifiactionsystem
    build:
      context: .
    restart: always
    depends_on:
      zookeeper-1:
        condition: service_started

    environment:
      - KAFKA_SERVICE_HOST=kafka-1
      - KAFKA_SERVICE_PORT=9092
    networks:
      - backend
      - frontend
    ports:
      - "8083:8080"
      - "9993:9990"

    expose:
      # Opens port 8080,9990 on the container
      - '8083'
      - '9993'
#    deploy:
#      mode: replicated
#      replicas: 3


networks:
  backend:
  frontend:
